<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="neu.dao.ExamineDao" >
  <resultMap id="BaseResultMap" type="neu.entity.Examine" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="userid" property="userid" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="picture" property="picture" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>


  <select id="queryByid" resultMap="BaseResultMap" >
    select * from examine where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="queryByUserid" resultMap="BaseResultMap" >
    select * from examine where userid = #{userid,jdbcType=BIGINT}
  </select>

  <select id="queryAll" resultMap="BaseResultMap" >
    select * from examine
  </select>

  <delete id="deleteById" >
    delete from examine where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="add" parameterType="neu.entity.Examine" >
    insert into examine (userid, name,
      email, introduction, school, 
      type, picture, createtime, 
      status)
    values (#{userid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER})
  </insert>

  <update id="update" parameterType="neu.entity.Examine" >
    update examine
    set userid = #{userid,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>